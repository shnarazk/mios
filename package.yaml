name:                mios
version:             1.6.1
synopsis:            A Minisat-based CDCL SAT solver in Haskell
description:
  A modern and very fast SAT solver written in Haskell, using CDCL, watch literals, VSIDS,
  blocking-literals, phase saving, LBD, Glucose-like restart and so on.
  'Mios' is an abbreviation of 'Minisat-based Implementation and Optimization Study on SAT solver'.
homepage:            https://github.com/shnarazk/mios
github:	             shnarazk/mios
license:             GPL-3
author:              Shuji Narazaki
maintainer:          narazaki@nagasaki-u.ac.jp
copyright:           2017 Shuji Narazaki
category:            Artificial Intelligence, Constraints
extra-source-files:
- app/sample.hs

flags:
  llvm:
    description:     Compile with llvm
    manual:          true
    default:         false
  utils:
    description:     Build misc utilities for developer
    manual:          true
    default:         false
default-extensions:   Strict
dependencies:
  - base >= 4.7 && < 5
  - ghc-prim >= 0.5
  - primitive >= 0.6
  - bytestring >= 0.10
  - vector >= 0.12

when:
  - condition:       flag(llvm)
    then:
      ghc-options:      -j -O2 -funbox-strict-fields -fllvm -optlo-O3 -optlc-O3 -fwarn-missing-signatures
      ghc-prof-options: -j -O2 -funbox-strict-fields -fllvm -optlo-O3 -fprof-auto
    else:
      ghc-options:      -j -O2 -funbox-strict-fields -msse2 -fwarn-missing-signatures
      ghc-prof-options: -j -O2 -funbox-strict-fields -fprof-auto

library:
  source-dirs:       src

executables:
  mios-80.1:
    source-dirs:     app
    main:            mios.hs
    dependencies:
      - mios
      - gitrev
  cnf-stat:
    source-dirs:     utils
    main:            cnf-stat.hs
    dependencies:    mios
    when:
      - condition:   flag(utils)
        then:
          buildable: true
        else:
          buildable: false
  cnf-stat:
    source-dirs:     utils
    main:            cnf-stat.hs
    dependencies:    mios
    when:
      - condition:   flag(utils)
        then:
          buildable: true
        else:
          buildable: false
