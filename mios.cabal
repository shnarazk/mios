-- Initial mios.cabal generated by cabal init.  For further documentation,
-- see http://haskell.org/cabal/users-guide/

name:                   mios
version:                1.2.1
synopsis:               Minisat-based Implementation and Optimization Study on SAT solver
description:

  A modern and fast SAT solver written in Haskell, based on Minisat-1.14 and 2.2.
  By using CDCL, watch literals, VSIDS, restart, blocking-literals, LBD and so on,
  the current version is only 1.8 time slower than Minisat-1.14.
  .

license:                GPL-3
license-file:           LICENSE
author:                 Shuji Narazaki <narazaki@nagasaki-u.ac.jp>
maintainer:             Shuji Narazaki <narazaki@nagasaki-u.ac.jp>
-- copyright:
category:               Artificial Intelligence, Constraint Solver
build-type:             Simple
cabal-version:          >=1.16

Flag llvm
  Description:	        Compile with llvm (this requires patched ghc-8.0.1)
  Default:	        False

Flag extralib
  Description:	        Install extra libraries that mios itself doesn't use
  Default:	        False

library
  buildable:	        True
  default-language:	Haskell2010
  default-extensions:  Strict
  if flag(llvm)
    ghc-options:	-ignore-asserts -funbox-strict-fields -O2 -fllvm -optlo-O3
  else
    ghc-options:	-ignore-asserts -funbox-strict-fields -O2 -msse4.2
  if flag(extralib)
    exposed-modules:
                          SAT.Solver.Mios
                          SAT.Solver.Mios.Clause
                          SAT.Solver.Mios.ClauseManager
                          SAT.Solver.Mios.Data.VecBool
                          SAT.Solver.Mios.Data.VecDouble
                          SAT.Solver.Mios.Data.Vec
                          SAT.Solver.Mios.Data.Singleton
                          SAT.Solver.Mios.Data.Stack
                          SAT.Solver.Mios.Internal
                          SAT.Solver.Mios.Glucose
                          SAT.Solver.Mios.M114
                          SAT.Solver.Mios.OptionParser
                          SAT.Solver.Mios.Solver
                          SAT.Solver.Mios.Types
                          SAT.Solver.Mios.Validator
  else
    exposed-modules:
                          SAT.Solver.Mios
                          SAT.Solver.Mios.Clause
                          SAT.Solver.Mios.ClauseManager
                          SAT.Solver.Mios.Data.VecBool
                          SAT.Solver.Mios.Data.VecDouble
                          SAT.Solver.Mios.Data.Vec
                          SAT.Solver.Mios.Data.Singleton
                          SAT.Solver.Mios.Data.Stack
                          SAT.Solver.Mios.Internal
                          SAT.Solver.Mios.Glucose
                          SAT.Solver.Mios.M114
                          SAT.Solver.Mios.OptionParser
                          SAT.Solver.Mios.Solver
                          SAT.Solver.Mios.Types
                          SAT.Solver.Mios.Validator
                          SAT.Util.CNFIO
                          SAT.Util.CNFIO.MinisatReader
                          SAT.Util.CNFIO.Reader
                          SAT.Util.CNFIO.Writer
                          SAT.Util.BoolExp
  build-depends:        base ==4.9.*, vector ==0.11.*, containers ==0.5.*, ghc-prim ==0.5.*, bytestring ==0.10.*, primitive ==0.6.*

executable mios
  main-is:              app/mios.hs
  buildable:	        True
  default-language:	Haskell2010
  default-extensions:  Strict
  if flag(llvm)
    ghc-options:	-ignore-asserts -funbox-strict-fields -O2 -fllvm -optlo-O3
  else
    ghc-options:	-ignore-asserts -funbox-strict-fields -O2 -msse4.2
  build-depends:	base ==4.9.*, vector ==0.11.*, containers ==0.5.*, ghc-prim ==0.5.*, bytestring ==0.10.*, primitive ==0.6.*
  other-modules:
                        SAT.Solver.Mios
                        SAT.Solver.Mios.Clause
                        SAT.Solver.Mios.ClauseManager
                        SAT.Solver.Mios.Data.VecBool
                        SAT.Solver.Mios.Data.VecDouble
                        SAT.Solver.Mios.Data.Vec
                        SAT.Solver.Mios.Data.Singleton
                        SAT.Solver.Mios.Data.Stack
                        SAT.Solver.Mios.Internal
                        SAT.Solver.Mios.Glucose
                        SAT.Solver.Mios.M114
                        SAT.Solver.Mios.OptionParser
                        SAT.Solver.Mios.Solver
                        SAT.Solver.Mios.Types
                        SAT.Solver.Mios.Validator

executable mios-1.2.1
  main-is:              app/mios.hs
  buildable:	        True
  default-language:	Haskell2010
  default-extensions:  Strict
  if flag(llvm)
    ghc-options:	-ignore-asserts -funbox-strict-fields -O2 -fllvm -optlo-O3
  else
    ghc-options:	-ignore-asserts -funbox-strict-fields -O2 -msse4.2
  build-depends:	base ==4.9.*, vector ==0.11.*, containers ==0.5.*, ghc-prim ==0.5.*, bytestring ==0.10.*, primitive ==0.6.*
  other-modules:
                        SAT.Solver.Mios
                        SAT.Solver.Mios.Clause
                        SAT.Solver.Mios.ClauseManager
                        SAT.Solver.Mios.Data.VecBool
                        SAT.Solver.Mios.Data.VecDouble
                        SAT.Solver.Mios.Data.Vec
                        SAT.Solver.Mios.Data.Singleton
                        SAT.Solver.Mios.Data.Stack
                        SAT.Solver.Mios.Internal
                        SAT.Solver.Mios.Glucose
                        SAT.Solver.Mios.M114
                        SAT.Solver.Mios.OptionParser
                        SAT.Solver.Mios.Solver
                        SAT.Solver.Mios.Types
                        SAT.Solver.Mios.Validator
