-- Initial mios.cabal generated by cabal init.  For further documentation,
-- see http://haskell.org/cabal/users-guide/

name:           mios
version:        1.1.1
synopsis:       Minisat-based Implementation and Optimization Study on SAT solver
description:

  A modern and fast SAT solver in Haskell, based on Minisat. It uses CDCL, watch literals, VSIDS, restart, and so on.
  This is a part of 'Study on SAT Solver Algorithms in Haskell'.
  .

license:        GPL-3
license-file:   LICENSE
author:         Shuji Narazaki <narazaki@nagasaki-u.ac.jp>
maintainer:     Shuji Narazaki <narazaki@nagasaki-u.ac.jp>
-- copyright:
category:       Artificial Intelligence, Contraint Solver
build-type:     Simple
cabal-version:  >=1.16

Flag lib
  Description:	Install the library
  Default:	False

Flag llvm
  Description:	Compile with llvm
  Default:	False

Flag devel
  Description:	Build an executable for mios developers
  Default:	False

Flag profile
  Description:	Build an executable for profiling (use with '--enable-executable-profiling')
  Default:	False

Flag criterion
  Description:	Build an executable for exhaustive benchmarks
  Default:	False

library
  if flag(lib) && !flag(profile)
    buildable:	      False
  else
    buildable:	      False
  if flag(llvm)
    ghc-options:	-H40m -msse2 -O2 -rtsopts -funbox-strict-fields -fllvm -fno-warn-tabs
  else
    ghc-options:	-H40m -msse2 -O2 -rtsopts -funbox-strict-fields -fno-warn-tabs
  default-language:	Haskell2010
  -- Modules exported by the library.
  exposed-modules:
                                         SAT.Solver.Mios
                                         SAT.Solver.Mios.Types
                                         SAT.Solver.Mios.Data.FixedVecBool
                                         SAT.Solver.Mios.Data.FixedVecDouble
                                         SAT.Solver.Mios.Data.Vec
                                         SAT.Solver.Mios.Data.Singleton
                                         SAT.Solver.Mios.Data.Stack
                                         SAT.Solver.Mios.Clause
                                         SAT.Solver.Mios.ClauseManager
                                         SAT.Solver.Mios.WatcherLists
                                         SAT.Solver.Mios.Internal
                                         SAT.Solver.Mios.Solver
                                         SAT.Solver.Mios.M114
                                         SAT.Solver.Mios.Validator
                                         SAT.Solver.Mios.OptionParser
    -- Modules included in this library but not exported.
  other-modules:
    -- Other library packages from which modules are imported.
  build-depends:       base ==4.8.*, vector ==0.11.*, containers ==0.5.*, ghc-prim ==0.4.*, bytestring ==0.10.*,
                          primitive ==0.6.*, random ==1.*

executable mios
  main-is:            app/mios.hs
  if flag(profile) || flag(devel)
    buildable:	       False
  else
    buildable:	       True
  default-language:	Haskell2010
  if flag(llvm)
    ghc-options:	-fstrictness -fno-state-hack -funbox-strict-fields -msse2 -O2 -ignore-asserts -fllvm -optlo-O3 -fno-warn-tabs -funfolding-use-threshold=200 -fno-full-laziness
  else
    ghc-options:	-fstrictness -fno-state-hack -funbox-strict-fields -msse2 -O2 -fignore-asserts -fno-warn-tabs -funfolding-use-threshold=200 -fno-full-laziness
  build-depends:       base ==4.8.*, vector ==0.11.*, containers ==0.5.*, ghc-prim ==0.4.*, bytestring ==0.10.*,
                          primitive ==0.6.*, random ==1.*
  other-modules:
    SAT.Solver.Mios
    SAT.Solver.Mios.Clause
    SAT.Solver.Mios.ClauseManager
    SAT.Solver.Mios.Data.FixedVecBool
    SAT.Solver.Mios.Data.FixedVecDouble
    SAT.Solver.Mios.Data.Vec
    SAT.Solver.Mios.Data.Singleton
    SAT.Solver.Mios.Data.Stack
    SAT.Solver.Mios.Internal
    SAT.Solver.Mios.M114
    SAT.Solver.Mios.OptionParser
    SAT.Solver.Mios.Solver
    SAT.Solver.Mios.Types
    SAT.Solver.Mios.Validator
    SAT.Solver.Mios.WatcherLists

executable mios-1.1.1
  main-is:            app/mios.hs
  if flag(devel)
    buildable:	       True
  else
    buildable:	       False
  default-language:	Haskell2010
  if flag(llvm)
    ghc-options:	-fstrictness -fno-state-hack -funbox-strict-fields -msse2 -O2 -ignore-asserts -fllvm -optlo-O3 -fno-warn-tabs -funfolding-use-threshold=200 -fno-full-laziness
  else
    ghc-options:	-fstrictness -fno-state-hack -funbox-strict-fields -msse2 -O2 -fignore-asserts -fno-warn-tabs -funfolding-use-threshold=200 -fno-full-laziness
  build-depends:       base ==4.8.*, vector ==0.11.*, containers ==0.5.*, ghc-prim ==0.4.*, bytestring ==0.10.*,
                          primitive ==0.6.*, random ==1.*
  other-modules:
    SAT.Solver.Mios
    SAT.Solver.Mios.Clause
    SAT.Solver.Mios.ClauseManager
    SAT.Solver.Mios.Data.FixedVecBool
    SAT.Solver.Mios.Data.FixedVecDouble
    SAT.Solver.Mios.Data.Vec
    SAT.Solver.Mios.Data.Singleton
    SAT.Solver.Mios.Data.Stack
    SAT.Solver.Mios.Internal
    SAT.Solver.Mios.M114
    SAT.Solver.Mios.OptionParser
    SAT.Solver.Mios.Solver
    SAT.Solver.Mios.Types
    SAT.Solver.Mios.Validator
    SAT.Solver.Mios.WatcherLists

executable mios-1.1.1-prof
  main-is:            app/mios.hs
  if flag(profile) && flag(devel)
    buildable:	       True
  else
    buildable:	       False
  default-language:    Haskell2010
  ghc-options:	       -prof -fprof-auto-top -ignore-inline -msse2 -O2 -rtsopts -fno-warn-tabs
  build-depends:       base ==4.8.*, vector ==0.11.*, containers ==0.5.*, ghc-prim ==0.4.*, bytestring ==0.10.*,
                          primitive ==0.6.*, random ==1.*
  other-modules:
    SAT.Solver.Mios
    SAT.Solver.Mios.Clause
    SAT.Solver.Mios.ClauseManager
    SAT.Solver.Mios.Data.FixedVecBool
    SAT.Solver.Mios.Data.FixedVecDouble
    SAT.Solver.Mios.Data.Vec
    SAT.Solver.Mios.Data.Singleton
    SAT.Solver.Mios.Data.Stack
    SAT.Solver.Mios.Internal
    SAT.Solver.Mios.M114
    SAT.Solver.Mios.OptionParser
    SAT.Solver.Mios.Solver
    SAT.Solver.Mios.Types
    SAT.Solver.Mios.Validator
    SAT.Solver.Mios.WatcherLists

Test-Suite doctest
  type:                 exitcode-stdio-1.0
  default-language:     Haskell2010
  hs-source-dirs:       test
  ghc-options:          -threaded -Wall -fno-warn-tabs
  main-Is:              doctest.hs
  build-depends:        base, doctest >= 0.9.3

Benchmark mios-1.1.1-benchmark
  type:    exitcode-stdio-1.0
  main-is: test/mios-criterion.hs
  default-language:	Haskell2010
  ghc-options:	-fstrictness -fno-state-hack -funbox-strict-fields -msse2 -O2 -fignore-asserts -fno-warn-tabs -funfolding-use-threshold=200
  build-depends:       base ==4.8.*, vector ==0.11.*, containers ==0.5.*, ghc-prim ==0.4.*, bytestring ==0.10.*,
                          primitive ==0.6.*, random ==1.*,
                          criterion == 1.*

executable mios-1.1.1-cr
  main-is: test/mios-criterion.hs
  default-language:	Haskell2010
  if flag(criterion) && flag(devel)
    buildable: True
  else
    buildable: False
  ghc-options:	-fstrictness -msse2 -O2 -rtsopts -fignore-asserts -fcase-merge -fstatic-argument-transformation -fno-warn-tabs
  build-depends:       base ==4.8.*, vector ==0.11.*, containers ==0.5.*, ghc-prim ==0.4.*, bytestring ==0.10.*,
                          primitive ==0.6.*, random ==1.*,
                          criterion == 1.*
  other-modules:
    SAT.Solver.Mios
    SAT.Solver.Mios.Clause
    SAT.Solver.Mios.ClauseManager
    SAT.Solver.Mios.Data.FixedVecBool
    SAT.Solver.Mios.Data.FixedVecDouble
    SAT.Solver.Mios.Data.Vec
    SAT.Solver.Mios.Data.Singleton
    SAT.Solver.Mios.Data.Stack
    SAT.Solver.Mios.Internal
    SAT.Solver.Mios.M114
    SAT.Solver.Mios.OptionParser
    SAT.Solver.Mios.Solver
    SAT.Solver.Mios.Types
    SAT.Solver.Mios.Validator
    SAT.Solver.Mios.WatcherLists
